@model List<Chess.Atomic.Crawling.Models.AtomicGameInfo>

@{
    ViewBag.Title = "Home Page";
    ViewBag.Player = "Aragorn1";
}

<div class="jumbotron">
    @Html.TextBox("playerId", "Aragorn1")
    </br>
    @Html.ActionLink("Start crawling", "Crawling", "GameMoves", new { playerId = "penguingim1" }, new { @class = "btn btn-primary btn-lg" })
    </br>
    @Ajax.
   
</div>

@*@Html.TextArea("answer", (Model == null) ? "answer will be here ..." : Model.responseBody, new { @class = "fullwidth resizable", rows = "5" })*@

@if (Model != null && Model.Count > 0)
{
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model[0].white)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].black)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].moves)
        </th>
        <th></th>
    </tr>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.white)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.black)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.moves)
            </td>
        </tr>
    }
    

</table>
    }